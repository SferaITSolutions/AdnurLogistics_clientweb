{"version":3,"sources":["turbopack:///[project]/src/features/change-language/ui/index.tsx"],"sourcesContent":["'use client';\n\nimport { getLocalItem, setLocalItem } from '@/shared/utils/storage';\n\nimport { LANGUAGES } from '@/shared/constants';\nimport { Select } from 'antd';\nimport { usePathname } from '@/i18n/routing';\nimport { useRouter } from 'next/navigation';\n\nexport default function LanguageSwitcher() {\n  const router = useRouter();\n  const pathname = usePathname();\n\n  const pathParts = pathname.split('/').filter(Boolean); // removes empty strings\n  const handleChange = (value: string) => {\n    setLocalItem('lang', value);\n    let newPath = '';\n    if (pathParts.length > 0) {\n      newPath += `/${value}${pathname}`;\n    } else newPath += '/' + value;\n    router.push(newPath);\n  };\n\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Select\n        value={getLocalItem('lang') || 'uz'}\n        onChange={handleChange}\n        style={{ width: 120 }}\n        options={LANGUAGES.map((lang: { code: string; label: string }) => ({\n          value: lang.code,\n          label: lang.label,\n        }))}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"+zBAEA,EAAA,EAAA,CAAA,CAAA,OAEA,EAAA,CAAA,CAAA,OAAA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAEe,SAAS,IACtB,IAAM,EAAS,CAAA,EAAA,EAAA,SAAA,AAAS,IAClB,EAAW,CAAA,EAAA,EAAA,WAAA,AAAW,IAEtB,EAAY,EAAS,KAAK,CAAC,KAAK,MAAM,CAAC,SAU7C,CAVuD,KAWrD,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,EAXwE,QAW9D,mCACb,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CACL,MAAO,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,SAAW,KAC/B,SAbe,AAAC,CAaN,GAZd,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,OAAQ,GACrB,IAAI,EAAU,GACV,EAAU,MAAM,CAAG,EACrB,CADwB,EACb,CAAC,CAAC,EAAE,EAAA,EAAQ,EAAA,CAAU,CAC5B,GAAW,IAAM,EACxB,EAAO,IAAI,CAAC,EACd,EAOM,MAAO,CAAE,MAAO,GAAI,EACpB,QAAS,EAAA,SAAS,CAAC,GAAG,CAAC,AAAC,IAA2C,CACjE,EADgE,IACzD,EAAK,IAAI,CAChB,MAAO,EAAK,KAAK,CACnB,CAAC,KAIT"}