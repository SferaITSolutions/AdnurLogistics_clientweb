{"version":3,"sources":["turbopack:///[project]/src/features/auth/sign-in/ui/index.tsx","turbopack:///[project]/src/features/auth/sign-in/molecules/errorLabel.tsx"],"sourcesContent":["'use client';\n\nimport { FaInfoCircle, FaSpinner } from 'react-icons/fa';\nimport { Form, Input } from 'antd';\nimport { Link, useRouter } from '@/i18n/routing';\nimport {\n  deformatPhone,\n  deformatPhoneTR,\n  formatPhone,\n  formatPhoneTR,\n} from '@/shared/utils/formatter';\n\nimport BgImage from '@/assets/images/auth/Group 48097120.png';\nimport { ButtonPrimary } from '@/shared/components/dump/atoms';\nimport Image from 'next/image';\nimport LoginErrorlabel from '../molecules/errorLabel';\nimport SelectBefore from '@/shared/components/dump/atoms/select-before';\nimport { extractErrorMessage } from '@/shared/utils';\nimport { loginSchema } from '@/shared/schemas/loginSchema';\nimport { useGlobalStore } from '@/shared/store/globalStore';\nimport { useLoginMutation } from '@/services/auth/hook';\nimport { useState } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { z } from 'zod';\n\nexport default function SignInUI() {\n  const t = useTranslations('login');\n  const navigate = useRouter();\n  const loginMutation = useLoginMutation();\n  const { beforePhone } = useGlobalStore();\n  const [loginErrorMessage, setLoginErrorMessage] = useState('');\n\n  const schema = loginSchema(t);\n  const [form] = Form.useForm();\n\n  const onSubmit = (values: z.infer<typeof schema>) => {\n    const { phone, password } = values;\n    const cleanData = {\n      password,\n      phone: beforePhone === '+998' ? deformatPhone(phone) : deformatPhoneTR(phone),\n    };\n\n    loginMutation.mutate(cleanData, {\n      onSuccess: () => navigate.push('/client/dashboard'),\n      onError: (err) => setLoginErrorMessage(err),\n    });\n  };\n\n  return (\n    <div className=\"flex justify-between gap-10 min-h-screen\">\n      <Image\n        src={BgImage}\n        alt=\"bg\"\n        className=\"max-h-screen hidden lg:block lg:w-1/2 object-cover\"\n        priority\n      />\n      <div className=\"flex flex-col justify-center items-center w-full lg:w-1/2 p-10 relative overflow-hidden\">\n        <h1 className=\"text-5xl font-bold mb-4\">{t('title')}</h1>\n        <Form layout=\"vertical\" form={form} onFinish={onSubmit} className=\"w-full max-w-[350px]\">\n          <Form.Item\n            label={t('phone')}\n            name=\"phone\"\n            rules={[\n              { required: true, message: t('phonePlaceholder') },\n              {\n                pattern: /^(?:\\+998\\s|\\+90\\s)?\\d{2,3}\\s\\d{3}\\s\\d{2}\\s\\d{2}$/,\n                message: `${t('phoneFormat')}: ${\n                  beforePhone === '+998' ? '+998 90 123 45 67' : '+90 123 123 1234'\n                }`,\n              },\n            ]}\n          >\n            <Input\n              size=\"large\"\n              addonBefore={<SelectBefore />}\n              onChange={(e) => {\n                form.setFieldsValue({\n                  phone:\n                    beforePhone === '+998'\n                      ? formatPhone(e.target.value, true)\n                      : formatPhoneTR(e.target.value, true),\n                });\n              }}\n              placeholder={beforePhone === '+998' ? '90 123 45 67' : '123 123 1234'}\n            />\n          </Form.Item>\n\n          {/* Parol */}\n          <Form.Item\n            label={t('password')}\n            name=\"password\"\n            rules={[{ required: true, message: t('passwordPlaceholder') }]}\n          >\n            <Input.Password size=\"large\" placeholder={t('passwordPlaceholder')} />\n          </Form.Item>\n          {loginErrorMessage && (\n            <div className=\"mb-5\">\n              <LoginErrorlabel\n                icon={<FaInfoCircle />}\n                variant=\"error\"\n                text={extractErrorMessage(loginErrorMessage)}\n                onClose={() => setLoginErrorMessage('')}\n                closable\n              />\n            </div>\n          )}\n\n          {/* Tugma */}\n          <Form.Item>\n            <ButtonPrimary\n              classNameDy=\"w-full justify-center !py-3 !mt-5\"\n              type=\"primary\"\n              Icon={loginMutation.isPending && <FaSpinner className=\"animate-spin text-white\" />}\n              label={t('button')}\n              disabled={loginMutation.isPending}\n            />\n          </Form.Item>\n        </Form>\n        <p className=\"hover:underline text-sm\">\n          <Link href=\"/auth/register\">{t('register')}</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n","\"use client\";\n\nimport React from \"react\";\n\ntype Variant = \"info\" | \"error\" | \"success\" | \"warning\";\n\ninterface LoginErrorlabelProps {\n  text: string;\n  variant?: Variant;\n  icon?: React.ReactNode;\n  closable?: boolean;\n  className?: string;\n  onClose?: () => void;\n}\n\n/**\n * Simple outline text component.\n * - Shows an outlined box with text.\n * - Supports variants (info/error/success/warning).\n * - Optional icon and closable button.\n */\nexport const LoginErrorlabel: React.FC<LoginErrorlabelProps> = ({\n  text,\n  variant = \"info\",\n  icon,\n  closable = false,\n  className = \"\",\n  onClose,\n}) => {\n  const base =\n    \"w-full rounded-lg border px-4 py-2 gap-3 text-sm sm:text-base\";\n  const variantMap: Record<\n    Variant,\n    { border: string; text: string; bg?: string; iconColor?: string }\n  > = {\n    info: { border: \"!border-blue-500\", text: \"text-blue-800\", iconColor: \"text-blue-500\" },\n    success: { border: \"!border-green-500\", text: \"text-green-800\", iconColor: \"text-green-500\" },\n    error: { border: \"!border-red-500\", text: \"text-red-800\", iconColor: \"text-red-500\" },\n    warning: { border: \"border-yellow-500\", text: \"text-yellow-800\", iconColor: \"text-yellow-500\" },\n  };\n\n  const v = variantMap[variant];\n\n  return (\n    <div className={`${base} ${v.border} ${v.text} bg-white ${className} relative flex items-center fade`} >\n      {icon ? (\n        <div className={`${v.iconColor} mt-[2px]`}>{icon}</div>\n      ) : (\n        /* small dot to visually balance when no icon */\n        <div className={`w-2 h-2 rounded-full ${v.iconColor} mt-2`} />\n      )}\n\n      <div>\n        {text}\n      </div>\n\n      {closable && (\n        <button\n          onClick={onClose}\n          aria-label=\"close\"\n          className=\" opacity-80 hover:opacity-100 transition text-[#333] absolute right-4\"\n        >\n          âœ•\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default LoginErrorlabel;\n"],"names":[],"mappings":"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"}